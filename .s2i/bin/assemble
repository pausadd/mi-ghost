#!/bin/bash

# Prevent running assemble in builders different than official STI image.
# The official nodejs:8-onbuild already run npm install and use different
# application folder.
[ -d "/usr/src/app" ] && exit 0

set -e

# FIXME: Linking of global modules is disabled for now as it causes npm failures
#        under RHEL7
# Global modules good to have
# npmgl=$(grep "^\s*[^#\s]" ../etc/npm_global_module_list | sort -u)
# Available global modules; only match top-level npm packages
#global_modules=$(npm ls -g 2> /dev/null | perl -ne 'print "$1\n" if /^\S+\s(\S+)\@[\d\.-]+/' | sort -u)
# List all modules in common
#module_list=$(/usr/bin/comm -12 <(echo "${global_modules}") | tr '\n' ' ')
# Link the modules
#npm link $module_list

safeLogging () {
    if [[ $1 =~ http[s]?://.*@.*$ ]]; then
        echo $1 | sed 's/^.*@/redacted@/'
    else
        echo $1
    fi
}

shopt -s dotglob
echo "---> Installing application source ..."
mv /tmp/src/* ./

if [ ! -z $HTTP_PROXY ]; then
    echo "---> Setting npm http proxy to" $(safeLogging $HTTP_PROXY)
    npm config set proxy $HTTP_PROXY
fi

if [ ! -z $http_proxy ]; then
    echo "---> Setting npm http proxy to" $(safeLogging $http_proxy)
    npm config set proxy $http_proxy
fi

if [ ! -z $HTTPS_PROXY ]; then
    echo "---> Setting npm https proxy to" $(safeLogging $HTTPS_PROXY)
    npm config set https-proxy $HTTPS_PROXY
fi

if [ ! -z $https_proxy ]; then
    echo "---> Setting npm https proxy to" $(safeLogging $https_proxy)
    npm config set https-proxy $https_proxy
fi

# Change the npm registry mirror if provided
if [ -n "$NPM_MIRROR" ]; then
    npm config set registry $NPM_MIRROR
fi

# If NODE_ENV is not set by the user, then NODE_ENV is considered production
if [ -z "$NODE_ENV" ]; then
  export NODE_ENV=production
fi

#echo "---> Installing Max Buffer exceeded error ..."
#npm install --quiet max-buffer-exceeded-error
echo "---> Installing Ghost application ..."
npm install --quiet ghost-cli@latest
echo "---> Creating Ghost directory ..."
mkdir ghost-install
echo "---> Installing Ghost ..."
# quito el --verbose de abajo
node_modules/ghost-cli/bin/ghost install \
    --dir=ghost-install \
    --port=8080 --ip=0.0.0.0 \
    --db=mysql \
    --dbhost="ghost-db.${OPENSHIFT_BUILD_NAMESPACE}.svc" \
    --dbuser="${GHOST_DB_USER}" \
    --dbpass="${GHOST_DB_PASSWORD}" \
    --no-stack --no-start --no-enable --no-prompt --no-setup


# Fix source directory permissions
fix-permissions ./

# Remove ghost-cli node_modules to reduce image size
rm -rf node_modules
